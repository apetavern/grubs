@namespace Grubs.UI.GameLanding

@using Grubs.Terrain

@inherits ScenePanel

<style>
    TerrainPreview {
        width: 100%;
        height: 100%;
    }
</style>

<root>
    @if (Networking.IsHost && GrubsConfig.WorldTerrainType is GrubsConfig.TerrainType.Generated)
    {
        <i onclick=@RefreshTerrain>refresh</i>
    }
</root>

@code
{
    public override void Tick()
    {
        {
            if (Scene is null)
                return;

            RenderScene = Scene;

            var center = new Vector3(0f, 512f, (GrubsTerrain.Instance?.WorldTextureHeight ?? 1024f) / 2f);
            var w = GrubsTerrain.Instance?.WorldTextureLength ?? 2048f;
            var h = GrubsTerrain.Instance?.WorldTextureHeight ?? 1024f;

            var distX = w / (2 * MathF.Tan(RenderScene.Camera.FieldOfView / 2f * 0.017f));

            // I think this is wrong but it works for most scenarios.
            var distY = h * 2 / (2 * MathF.Tan(RenderScene.Camera.FieldOfView / 2f * 0.017f));

            var distance = Math.Max(distX, distY);

            RenderScene.Camera.WorldRotation = Rotation.FromYaw(90f);
            RenderScene.Camera.WorldPosition = (GrubsTerrain.Instance?.WorldPosition ?? new Vector3(0, 512f, 0)) + Vector3.Up * h / 2f - RenderScene.Camera.WorldRotation.Forward * distance;
            RenderScene.Camera.ZNear = 100f;
            RenderScene.Camera.ZFar = 100000f;
        }
    }

    private void RefreshTerrain()
    {
        GrubsTerrain.Instance?.Init();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(GrubsConfig.WorldTerrainType);
    }
}