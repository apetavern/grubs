@namespace Grubs

<root>
    <img src="avatar:@Player.Client.SteamId" class="avatar" />
    <div style="flex-direction: column; margin-left: 5px;">
        <label text=@Player.Client.Name class="name" />
        <div class="health">
            <div 
                class="fill" 
                style="background: linear-gradient(to top, @Player.Preferences.Color.Hex, @Player.Preferences.Color.Lighten(-0.3f).Hex); width: @(GetHealthPercentage())%;" 
            />
        </div>
    </div>
    <label class="voice-icon" style="opacity: @(_isTalking ? 1 : 0)">record_voice_over</label>
</root>

@code {
    public Player Player { get; set; }

    private RealTimeSince _timeSincePlayed;
    private readonly float _voiceTimeout = 0.1f;
    private bool _isTalking = false;

    public void OnVoicePlayed()
    {
        _timeSincePlayed = 0;
    }

    public override void Tick()
    {
        var timeoutInv = 1 - (_timeSincePlayed / _voiceTimeout);
        timeoutInv = MathF.Min( timeoutInv * 2.0f, 1.0f );
        _isTalking = timeoutInv > 0;
    }

    private int GetHealthPercentage()
    {
        return Player.Grubs.Count != 0 ? Player.GetTotalGrubHealth() / Player.Grubs.Count : 0;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(Player.GetTotalGrubHealth(), _isTalking);
    }
}

<style>
    PlayerInfo {
        flex-shrink: 0;
        padding-top: 10px;

        .avatar {
            width: 65px;
            height: 65px;
            border-radius: 4px;
        }

        .name {
            font-family: Londrina Solid;
            font-size: 30px;
            color: white;
            text-shadow: 2px 2px 0px black;
        }

        .health {
            width: 250px;
            height: 20px;
            border-radius: 4px;
            background-color: rgba(235, 235, 235, 0.24);

            .fill {
                transition: all 750ms ease-in-out;
                height: 100%;
                width: 100%;
                border-radius: 4px;
            }
        }

        .voice-icon {
            position: absolute;
            left: -42px;
            top: -5px;
            transition: opacity 100ms ease-out;

            font-family: MaterialIcons;
            font-size: 30px;
            color: rgb(252, 215, 52);
            text-shadow: 2px 2px 0px black;

            animation-duration: 1s;
            animation-name: wiggle;
            animation-iteration-count: infinite;
        }
    }

    @@keyframes wiggle {
        0% {transform: rotate(0deg);}
        25% {transform: rotate(-3deg);}
        50% {transform: rotate(3deg);}
        75% {transform: rotate(-2deg);}
        100% {transform: rotate(1deg);}
    }
</style>