@namespace Grubs.UI
@inherits Sandbox.UI.Panel
@attribute [StyleSheet]

@if ( Game.LocalPawn is not Player player )
{
    return;
}
<root class="@(IsDisabled(player) ? "disabled" : "")">
    <label class="charges">@GetAmmoString()</label>
    <label class="delay @(GamemodeSystem.Instance.RoundsPassed >= Weapon.UnlockDelay ? "hidden" : "")">@(Weapon.UnlockDelay - GamemodeSystem.Instance.RoundsPassed)</label>
    <div class="delay-progress" style="height: @(GetDelayHeight())%"></div>
    <img src=@Weapon.Icon />
</root>

@code {
    public Weapon Weapon { get; set; }

    bool IsDisabled(Player player)
    {
        if (!Weapon.HasAmmo() || !player.IsTurn || Weapon.UnlockDelay > GamemodeSystem.Instance.RoundsPassed)
            return true;
        return false;
    }

    private float GetDelayHeight()
    {
        if (Weapon.UnlockDelay == 0) return 0;
        return (1 - ((float)GamemodeSystem.Instance.RoundsPassed + 1) / (Weapon.UnlockDelay + 1)) * 100;
    }

    protected string GetAmmoString()
    {
        return Weapon.Ammo == -1 ? "inf" : Weapon.Ammo.ToString();
    }

    protected override int BuildHash()
    {
        var player = Game.LocalPawn as Player;
        return HashCode.Combine(Weapon.HasAmmo(), GetAmmoString(), player.IsTurn, GamemodeSystem.Instance.RoundsPassed);
    }
}