@namespace Grubs.UI

@if (Game.LocalPawn is not Player localPlayer)
{
    return;
}

<root>
    <div class="container">
        <label class="title">Players</label>
        <div class="players">
            @foreach (var client in Game.Clients)
            {
                if (client.Pawn is not Player player)
                    continue;

                <div class="player">
                    <div style="align-items: center;">
                        <div class="color-strip" style="background-color: @player.Color.Hex"></div>
                        <img src="avatar:@client.SteamId" class="avatar" />
                        <label class="name">@client.Name</label>
                    </div>
                    <div class="hours" style="align-items: center;">
                        <label>@player.PlayTime.ToString("0.0")hrs</label>
                        <button icon="timer" style="margin-left: 4px;" />
                    </div>
                </div>
            }
        </div>
    </div>
    <div style="height: 20px;" />
    <button class="play-button @(IsButtonEnabled() ? "" : "disabled")" onclick=@OnStartClick>@GetButtonText()</button>
</root>

@code {
    private string GetButtonText()
    {
        if (Game.Clients.Count < GamemodeSystem.Instance.MinimumPlayers)
            return $"PLAYERS {Game.Clients.Count}/{GamemodeSystem.Instance.MinimumPlayers}";

        if (!Game.LocalClient.IsListenServerHost)
            return "WAITING FOR HOST...";

        return "PLAY";
    }

    private void OnStartClick()
    {
        if (IsButtonEnabled())
            StartGame();
    }

    private bool IsButtonEnabled()
    {
        @* Not the best... *@
        return GetButtonText() == "PLAY";
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(
            GetButtonText(), 
            IsButtonEnabled(),
            Game.Clients.HashCombine(c => HashCode.Combine((c.Pawn as Player)?.Color.RawInt, c.SteamId))
        );
    }
}

<style>
    PlayMenu {
        top: 40px;
        left: 80px;
        width: 25%;
        flex-direction: column;

        .container {
            height: 600px;
            flex-direction: column;

            .title {
                align-items: center;
                margin-top: 2px;
                font-size: 48px;
                padding: 16px;
                background-image: linear-gradient(90deg, #3E0655AA, #3E065500);
            }

            .players {
                padding: 10px 16px 0px 16px;
                gap: 10px;
                flex-direction: column;
                overflow: scroll;
                width: 100%;
                height: 100%;

                .player {
                    flex-shrink: 0;
                    justify-content: space-between;

                    .color-strip {
                        width: 5px;
                        height: 100%;
                        margin-right: 4px;
                        border-radius: 4px 0px 0px 4px;
                    }

                    .avatar {
                        width: 50px;
                        height: 50px;
                        flex-shrink: 0;
                        margin-right: 12px;
                        border-radius: 0px 4px 4px 0px;
                    }

                    .name {
                        font-size: 32px;
                        font-weight: lighter;
                        white-space: nowrap;
                        text-overflow: ellipsis;
                    }

                    .hours {
                        margin-left: 4px;
                        font-size: 20px;
                        font-weight: lighter;
                    }
                }
            }
        }

        .play-button {
            width: 100%;
            height: 100px;
            background-color: #FDE74C86;
            color: black;
            backdrop-filter-blur: 20px;

            label {
                font-size: 3vw;
            }

            &.disabled {
                opacity: 0.6;
            }
        }
    }
</style>