@namespace Grubs.UI
@inherits Sandbox.UI.Panel
@attribute [StyleSheet("PlayMenu.razor.scss")]

@if (Game.LocalPawn is not Player localPlayer)
{
    return;
}

<root>
    <div class="container">
            <div class="header">
                <label>Players</label>
                <label>@(Game.Clients.Count) / @(Game.Server.MaxPlayers)</label>
            </div>
        <div class="players">
            @foreach (var client in Game.Clients)
            {
                if (client.Pawn is not Player player)
                    continue;

                <div class="player">
                    <div style="align-items: center;">
                        <div class="color-strip" style="background-color: @player.Color.Hex"></div>
                        <img src="avatar:@client.SteamId" class="avatar" />
                        <label class="name">@client.Name</label>
                    </div>
                    @if(!client.IsBot)
                    {
                        <div class="hours" style="align-items: center;">
                            <label>@player.PlayTime.ToString("0.0")hrs</label>
                            <button icon="timer" style="margin-left: 4px;" />             
                        </div>
                    }
                </div>
            }
        </div>
    </div>
    <div style="height: 20px;" />
    <button class="play-button @(IsButtonEnabled() ? "" : "disabled")" onclick=@OnStartClick>@GetButtonText()</button>
</root>

@code {
    private string GetButtonText()
    {
        if (Game.Clients.Count < GamemodeSystem.Instance.MinimumPlayers)
            return $"PLAYERS {Game.Clients.Count}/{GamemodeSystem.Instance.MinimumPlayers}";

        if (!Game.LocalClient.IsListenServerHost)
            return "WAITING FOR HOST...";

        return "PLAY";
    }

    private void OnStartClick()
    {
        if (IsButtonEnabled())
            StartGame();
    }

    private bool IsButtonEnabled()
    {
        @* Not the best... *@
        return GetButtonText() == "PLAY";
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(
            GetButtonText(), 
            IsButtonEnabled(),
            Game.Clients.HashCombine(c => HashCode.Combine((c.Pawn as Player)?.Color.RawInt, c.SteamId))
        );
    }
}