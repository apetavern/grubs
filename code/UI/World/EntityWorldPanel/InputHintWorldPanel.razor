@inherits EntityWorldPanel
@namespace Grubs.UI

<root>
    <div class="background">
        @for (int i = 0; i < _inputActions.Count; ++i)
        {
            <div style="align-items: center;">
                <InputGlyph button=@_inputActions[i] size="large"/>
                <label>@_inputDescriptions[i]</label>
            </div>
        }
    </div>
</root>

@code {
    private List<string> _inputActions;
    private List<string> _inputDescriptions;

    public InputHintWorldPanel(Entity entity, InputHintComponent inputHint) : base(entity, Vector3.Down * 7.5f)
    {
        _inputActions = inputHint.InputActions.ToList();
        _inputDescriptions = inputHint.InputDescriptions.ToList();
    }

	public void UpdateInput( string inputAction, string description )
	{
		var actionIndex = _inputActions.IndexOf( inputAction );
		if ( actionIndex != -1 )
			_inputDescriptions[actionIndex] = description;
	}

    protected override void OnAfterTreeRender( bool firstTime )
    {
        if (firstTime)
            return;

        var width = 1500;
        PanelBounds = new(-width/2, 0, width, 1000);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(_inputActions.HashCombine(h => h.GetHashCode()), _inputDescriptions.HashCombine(h => h.GetHashCode()));
    }
}

<style>
    InputHintWorldPanel {
        flex-direction: column;
        align-items: center;
        padding: 5px;

        .background {
            flex-direction: column;
            padding: 10px 10px;
            margin: 2px 0;
        }

        InputGlyph {
            margin-right: 5px;
        }

        div {
            margin-bottom: 5px;
        }

        label {
            font-size: 80px;
            font-family: Londrina Solid;
            text-shadow: 2px 2px 0px black;
            color: white;
        }
    }
</style>