@namespace Grubs.UI
@inherits Sandbox.UI.Panel
@attribute [StyleSheet]

<root>
    <label class="select-label">@SelectLabel</label>
    <button @ref=_selectButton class="select" @onclick=@(() => ToggleOptions())>
        <label>@Options[SelectedIndex]</label>
        <button icon="expand_more" class="expand" />
    </button>
    <div class="select-options" @ref=_optionsPanel>
        @foreach (var option in Options)
        {
            <label class="select-option" @onclick=@(() => OnOptionClick(option))>@option</label>
        }
    </div>
</root>


@code {
    public List<string> Options { get; set; }
    public int SelectedIndex { get; set; } = 0;
    public string SelectLabel { get; set; } = "Placeholder";
    public Action<string, string> OnOptionSelected { get; set; }
    public string Key { get; set; }
    public bool IsDisabled = false;

    private Button _selectButton;
    private Panel _optionsPanel;

    private void ToggleOptions()
    {
        if (IsDisabled)
            return;

        _optionsPanel.SetClass("show", !_optionsPanel.HasClass("show"));
    }

    private void OnOptionClick(string option)
    {
        SelectedIndex = Options.IndexOf(option);
        _optionsPanel.RemoveClass("show");

        OnOptionSelected(Key, SelectedIndex.ToString());
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(SelectedIndex, IsDisabled);
    }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        _selectButton.SetClass("disabled", IsDisabled);
    }
}