@namespace Grubs.UI
@inherits Sandbox.UI.Panel
@attribute [StyleSheet]

<root class="@(!Player.IsAvailableForTurn ? "inactive" : "")">
    <img src="avatar:@Player.SteamId" class="avatar" />
    <div style="flex-direction: column; margin-left: 5px;">
        <label text=@Player.SteamName class="name" style="font-color: @Player.Color.Hex;" />
        <div class="health">
            <div
                class="fill"
                style="background: linear-gradient(to bottom, @Player.Color.Hex, @Player.Color.Lighten(-0.3f).Hex); width: @(Player.GetHealthPercentage)%;" />
        </div>
    </div>
    @if (Player.IsDisconnected)
    {
        <label class="disconnect-icon">link_off</label>
    }
    <label class="voice-icon" style="opacity: @(_isTalking ? 1 : 0)">record_voice_over</label>
</root>

@code {
    public Player Player { get; set; }

    private RealTimeSince _timeSincePlayed;
    private readonly float _voiceTimeout = 0.1f;
    private bool _isTalking = false;

    public void OnVoicePlayed()
    {
        _timeSincePlayed = 0;
    }

    public override void Tick()
    {
        var timeoutInv = 1 - (_timeSincePlayed / _voiceTimeout);
        timeoutInv = MathF.Min(timeoutInv * 2.0f, 1.0f);
        _isTalking = timeoutInv > 0;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(Player.GetHealthPercentage, Player.IsAvailableForTurn, Player.IsDisconnected, _isTalking);
    }
}